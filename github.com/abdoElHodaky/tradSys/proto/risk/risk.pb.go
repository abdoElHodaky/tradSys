// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/risk/risk.proto

package risk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RiskLevel represents the risk level
type RiskLevel int32

const (
	RiskLevel_LOW      RiskLevel = 0
	RiskLevel_MEDIUM   RiskLevel = 1
	RiskLevel_HIGH     RiskLevel = 2
	RiskLevel_CRITICAL RiskLevel = 3
)

// Enum value maps for RiskLevel.
var (
	RiskLevel_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
		3: "CRITICAL",
	}
	RiskLevel_value = map[string]int32{
		"LOW":      0,
		"MEDIUM":   1,
		"HIGH":     2,
		"CRITICAL": 3,
	}
)

func (x RiskLevel) Enum() *RiskLevel {
	p := new(RiskLevel)
	*p = x
	return p
}

func (x RiskLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_risk_risk_proto_enumTypes[0].Descriptor()
}

func (RiskLevel) Type() protoreflect.EnumType {
	return &file_proto_risk_risk_proto_enumTypes[0]
}

func (x RiskLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskLevel.Descriptor instead.
func (RiskLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{0}
}

// OrderSide represents the side of an order
type OrderSide int32

const (
	OrderSide_BUY  OrderSide = 0
	OrderSide_SELL OrderSide = 1
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	OrderSide_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_risk_risk_proto_enumTypes[1].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_proto_risk_risk_proto_enumTypes[1]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{1}
}

// OrderType represents the type of an order
type OrderType int32

const (
	OrderType_MARKET     OrderType = 0
	OrderType_LIMIT      OrderType = 1
	OrderType_STOP       OrderType = 2
	OrderType_STOP_LIMIT OrderType = 3
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "MARKET",
		1: "LIMIT",
		2: "STOP",
		3: "STOP_LIMIT",
	}
	OrderType_value = map[string]int32{
		"MARKET":     0,
		"LIMIT":      1,
		"STOP":       2,
		"STOP_LIMIT": 3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_risk_risk_proto_enumTypes[2].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_proto_risk_risk_proto_enumTypes[2]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{2}
}

// AccountRiskRequest represents a request for account risk metrics
type AccountRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID to get risk metrics for
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountRiskRequest) Reset() {
	*x = AccountRiskRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRiskRequest) ProtoMessage() {}

func (x *AccountRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRiskRequest.ProtoReflect.Descriptor instead.
func (*AccountRiskRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{0}
}

func (x *AccountRiskRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// AccountRiskResponse represents a response with account risk metrics
type AccountRiskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the risk metrics
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Total value of the account
	TotalValue float64 `protobuf:"fixed64,2,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	// Available margin of the account
	AvailableMargin float64 `protobuf:"fixed64,3,opt,name=available_margin,json=availableMargin,proto3" json:"available_margin,omitempty"`
	// Used margin of the account
	UsedMargin float64 `protobuf:"fixed64,4,opt,name=used_margin,json=usedMargin,proto3" json:"used_margin,omitempty"`
	// Margin level of the account
	MarginLevel float64 `protobuf:"fixed64,5,opt,name=margin_level,json=marginLevel,proto3" json:"margin_level,omitempty"`
	// Margin call level of the account
	MarginCallLevel float64 `protobuf:"fixed64,6,opt,name=margin_call_level,json=marginCallLevel,proto3" json:"margin_call_level,omitempty"`
	// Liquidation level of the account
	LiquidationLevel float64 `protobuf:"fixed64,7,opt,name=liquidation_level,json=liquidationLevel,proto3" json:"liquidation_level,omitempty"`
	// Daily profit and loss of the account
	DailyPnl float64 `protobuf:"fixed64,8,opt,name=daily_pnl,json=dailyPnl,proto3" json:"daily_pnl,omitempty"`
	// Total profit and loss of the account
	TotalPnl float64 `protobuf:"fixed64,9,opt,name=total_pnl,json=totalPnl,proto3" json:"total_pnl,omitempty"`
	// Risk level of the account
	RiskLevel RiskLevel `protobuf:"varint,10,opt,name=risk_level,json=riskLevel,proto3,enum=risk.RiskLevel" json:"risk_level,omitempty"`
	// Risk limits of the account
	RiskLimits *RiskLimits `protobuf:"bytes,11,opt,name=risk_limits,json=riskLimits,proto3" json:"risk_limits,omitempty"`
	// Positions of the account
	Positions     []*Position `protobuf:"bytes,12,rep,name=positions,proto3" json:"positions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountRiskResponse) Reset() {
	*x = AccountRiskResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRiskResponse) ProtoMessage() {}

func (x *AccountRiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRiskResponse.ProtoReflect.Descriptor instead.
func (*AccountRiskResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{1}
}

func (x *AccountRiskResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AccountRiskResponse) GetTotalValue() float64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *AccountRiskResponse) GetAvailableMargin() float64 {
	if x != nil {
		return x.AvailableMargin
	}
	return 0
}

func (x *AccountRiskResponse) GetUsedMargin() float64 {
	if x != nil {
		return x.UsedMargin
	}
	return 0
}

func (x *AccountRiskResponse) GetMarginLevel() float64 {
	if x != nil {
		return x.MarginLevel
	}
	return 0
}

func (x *AccountRiskResponse) GetMarginCallLevel() float64 {
	if x != nil {
		return x.MarginCallLevel
	}
	return 0
}

func (x *AccountRiskResponse) GetLiquidationLevel() float64 {
	if x != nil {
		return x.LiquidationLevel
	}
	return 0
}

func (x *AccountRiskResponse) GetDailyPnl() float64 {
	if x != nil {
		return x.DailyPnl
	}
	return 0
}

func (x *AccountRiskResponse) GetTotalPnl() float64 {
	if x != nil {
		return x.TotalPnl
	}
	return 0
}

func (x *AccountRiskResponse) GetRiskLevel() RiskLevel {
	if x != nil {
		return x.RiskLevel
	}
	return RiskLevel_LOW
}

func (x *AccountRiskResponse) GetRiskLimits() *RiskLimits {
	if x != nil {
		return x.RiskLimits
	}
	return nil
}

func (x *AccountRiskResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

// PositionRiskRequest represents a request for position risk metrics
type PositionRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the position
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Symbol of the position
	Symbol        string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionRiskRequest) Reset() {
	*x = PositionRiskRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionRiskRequest) ProtoMessage() {}

func (x *PositionRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionRiskRequest.ProtoReflect.Descriptor instead.
func (*PositionRiskRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{2}
}

func (x *PositionRiskRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PositionRiskRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

// PositionRiskResponse represents a response with position risk metrics
type PositionRiskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the position
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Symbol of the position
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Size of the position
	Size float64 `protobuf:"fixed64,3,opt,name=size,proto3" json:"size,omitempty"`
	// Entry price of the position
	EntryPrice float64 `protobuf:"fixed64,4,opt,name=entry_price,json=entryPrice,proto3" json:"entry_price,omitempty"`
	// Current price of the position
	CurrentPrice float64 `protobuf:"fixed64,5,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	// Liquidation price of the position
	LiquidationPrice float64 `protobuf:"fixed64,6,opt,name=liquidation_price,json=liquidationPrice,proto3" json:"liquidation_price,omitempty"`
	// Unrealized profit and loss of the position
	UnrealizedPnl float64 `protobuf:"fixed64,7,opt,name=unrealized_pnl,json=unrealizedPnl,proto3" json:"unrealized_pnl,omitempty"`
	// Realized profit and loss of the position
	RealizedPnl float64 `protobuf:"fixed64,8,opt,name=realized_pnl,json=realizedPnl,proto3" json:"realized_pnl,omitempty"`
	// Initial margin of the position
	InitialMargin float64 `protobuf:"fixed64,9,opt,name=initial_margin,json=initialMargin,proto3" json:"initial_margin,omitempty"`
	// Maintenance margin of the position
	MaintenanceMargin float64 `protobuf:"fixed64,10,opt,name=maintenance_margin,json=maintenanceMargin,proto3" json:"maintenance_margin,omitempty"`
	// Risk level of the position
	RiskLevel     RiskLevel `protobuf:"varint,11,opt,name=risk_level,json=riskLevel,proto3,enum=risk.RiskLevel" json:"risk_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionRiskResponse) Reset() {
	*x = PositionRiskResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionRiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionRiskResponse) ProtoMessage() {}

func (x *PositionRiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionRiskResponse.ProtoReflect.Descriptor instead.
func (*PositionRiskResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{3}
}

func (x *PositionRiskResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PositionRiskResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PositionRiskResponse) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PositionRiskResponse) GetEntryPrice() float64 {
	if x != nil {
		return x.EntryPrice
	}
	return 0
}

func (x *PositionRiskResponse) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *PositionRiskResponse) GetLiquidationPrice() float64 {
	if x != nil {
		return x.LiquidationPrice
	}
	return 0
}

func (x *PositionRiskResponse) GetUnrealizedPnl() float64 {
	if x != nil {
		return x.UnrealizedPnl
	}
	return 0
}

func (x *PositionRiskResponse) GetRealizedPnl() float64 {
	if x != nil {
		return x.RealizedPnl
	}
	return 0
}

func (x *PositionRiskResponse) GetInitialMargin() float64 {
	if x != nil {
		return x.InitialMargin
	}
	return 0
}

func (x *PositionRiskResponse) GetMaintenanceMargin() float64 {
	if x != nil {
		return x.MaintenanceMargin
	}
	return 0
}

func (x *PositionRiskResponse) GetRiskLevel() RiskLevel {
	if x != nil {
		return x.RiskLevel
	}
	return RiskLevel_LOW
}

// OrderRiskRequest represents a request for order risk metrics
type OrderRiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the order
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Symbol of the order
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Side of the order
	Side OrderSide `protobuf:"varint,3,opt,name=side,proto3,enum=risk.OrderSide" json:"side,omitempty"`
	// Type of the order
	Type OrderType `protobuf:"varint,4,opt,name=type,proto3,enum=risk.OrderType" json:"type,omitempty"`
	// Quantity of the order
	Quantity float64 `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Price of the order
	Price         float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRiskRequest) Reset() {
	*x = OrderRiskRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRiskRequest) ProtoMessage() {}

func (x *OrderRiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRiskRequest.ProtoReflect.Descriptor instead.
func (*OrderRiskRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{4}
}

func (x *OrderRiskRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *OrderRiskRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderRiskRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_BUY
}

func (x *OrderRiskRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_MARKET
}

func (x *OrderRiskRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderRiskRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// OrderRiskResponse represents a response with order risk metrics
type OrderRiskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the order
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Symbol of the order
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Side of the order
	Side OrderSide `protobuf:"varint,3,opt,name=side,proto3,enum=risk.OrderSide" json:"side,omitempty"`
	// Type of the order
	Type OrderType `protobuf:"varint,4,opt,name=type,proto3,enum=risk.OrderType" json:"type,omitempty"`
	// Quantity of the order
	Quantity float64 `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Price of the order
	Price float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	// Required margin for the order
	RequiredMargin float64 `protobuf:"fixed64,7,opt,name=required_margin,json=requiredMargin,proto3" json:"required_margin,omitempty"`
	// Available margin after the order
	AvailableMarginAfter float64 `protobuf:"fixed64,8,opt,name=available_margin_after,json=availableMarginAfter,proto3" json:"available_margin_after,omitempty"`
	// Margin level after the order
	MarginLevelAfter float64 `protobuf:"fixed64,9,opt,name=margin_level_after,json=marginLevelAfter,proto3" json:"margin_level_after,omitempty"`
	// Risk level of the order
	RiskLevel RiskLevel `protobuf:"varint,10,opt,name=risk_level,json=riskLevel,proto3,enum=risk.RiskLevel" json:"risk_level,omitempty"`
	// Is the order allowed
	IsAllowed bool `protobuf:"varint,11,opt,name=is_allowed,json=isAllowed,proto3" json:"is_allowed,omitempty"`
	// Rejection reason if the order is not allowed
	RejectionReason string `protobuf:"bytes,12,opt,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OrderRiskResponse) Reset() {
	*x = OrderRiskResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRiskResponse) ProtoMessage() {}

func (x *OrderRiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRiskResponse.ProtoReflect.Descriptor instead.
func (*OrderRiskResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{5}
}

func (x *OrderRiskResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *OrderRiskResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderRiskResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_BUY
}

func (x *OrderRiskResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_MARKET
}

func (x *OrderRiskResponse) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderRiskResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderRiskResponse) GetRequiredMargin() float64 {
	if x != nil {
		return x.RequiredMargin
	}
	return 0
}

func (x *OrderRiskResponse) GetAvailableMarginAfter() float64 {
	if x != nil {
		return x.AvailableMarginAfter
	}
	return 0
}

func (x *OrderRiskResponse) GetMarginLevelAfter() float64 {
	if x != nil {
		return x.MarginLevelAfter
	}
	return 0
}

func (x *OrderRiskResponse) GetRiskLevel() RiskLevel {
	if x != nil {
		return x.RiskLevel
	}
	return RiskLevel_LOW
}

func (x *OrderRiskResponse) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

func (x *OrderRiskResponse) GetRejectionReason() string {
	if x != nil {
		return x.RejectionReason
	}
	return ""
}

// ValidateOrderRequest represents a request to validate an order
type ValidateOrderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the order
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Symbol of the order
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Side of the order
	Side OrderSide `protobuf:"varint,3,opt,name=side,proto3,enum=risk.OrderSide" json:"side,omitempty"`
	// Type of the order
	Type OrderType `protobuf:"varint,4,opt,name=type,proto3,enum=risk.OrderType" json:"type,omitempty"`
	// Quantity of the order
	Quantity float64 `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Price of the order
	Price         float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateOrderRequest) Reset() {
	*x = ValidateOrderRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOrderRequest) ProtoMessage() {}

func (x *ValidateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOrderRequest.ProtoReflect.Descriptor instead.
func (*ValidateOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateOrderRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ValidateOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ValidateOrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_BUY
}

func (x *ValidateOrderRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_MARKET
}

func (x *ValidateOrderRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ValidateOrderRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// ValidateOrderResponse represents a response with order validation
type ValidateOrderResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Is the order valid
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// Rejection reason if the order is not valid
	RejectionReason string `protobuf:"bytes,2,opt,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty"`
	// Risk metrics for the order
	RiskMetrics   *OrderRiskResponse `protobuf:"bytes,3,opt,name=risk_metrics,json=riskMetrics,proto3" json:"risk_metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateOrderResponse) Reset() {
	*x = ValidateOrderResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOrderResponse) ProtoMessage() {}

func (x *ValidateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOrderResponse.ProtoReflect.Descriptor instead.
func (*ValidateOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateOrderResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateOrderResponse) GetRejectionReason() string {
	if x != nil {
		return x.RejectionReason
	}
	return ""
}

func (x *ValidateOrderResponse) GetRiskMetrics() *OrderRiskResponse {
	if x != nil {
		return x.RiskMetrics
	}
	return nil
}

// UpdateRiskLimitsRequest represents a request to update risk limits
type UpdateRiskLimitsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID to update risk limits for
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Risk limits to update
	RiskLimits    *RiskLimits `protobuf:"bytes,2,opt,name=risk_limits,json=riskLimits,proto3" json:"risk_limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRiskLimitsRequest) Reset() {
	*x = UpdateRiskLimitsRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRiskLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRiskLimitsRequest) ProtoMessage() {}

func (x *UpdateRiskLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRiskLimitsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRiskLimitsRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRiskLimitsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateRiskLimitsRequest) GetRiskLimits() *RiskLimits {
	if x != nil {
		return x.RiskLimits
	}
	return nil
}

// UpdateRiskLimitsResponse represents a response with updated risk limits
type UpdateRiskLimitsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the updated risk limits
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Updated risk limits
	RiskLimits    *RiskLimits `protobuf:"bytes,2,opt,name=risk_limits,json=riskLimits,proto3" json:"risk_limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRiskLimitsResponse) Reset() {
	*x = UpdateRiskLimitsResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRiskLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRiskLimitsResponse) ProtoMessage() {}

func (x *UpdateRiskLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRiskLimitsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRiskLimitsResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRiskLimitsResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateRiskLimitsResponse) GetRiskLimits() *RiskLimits {
	if x != nil {
		return x.RiskLimits
	}
	return nil
}

// RiskLimits represents risk limits for an account
type RiskLimits struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum position size
	MaxPositionSize float64 `protobuf:"fixed64,1,opt,name=max_position_size,json=maxPositionSize,proto3" json:"max_position_size,omitempty"`
	// Maximum order size
	MaxOrderSize float64 `protobuf:"fixed64,2,opt,name=max_order_size,json=maxOrderSize,proto3" json:"max_order_size,omitempty"`
	// Maximum leverage
	MaxLeverage float64 `protobuf:"fixed64,3,opt,name=max_leverage,json=maxLeverage,proto3" json:"max_leverage,omitempty"`
	// Maximum daily loss
	MaxDailyLoss float64 `protobuf:"fixed64,4,opt,name=max_daily_loss,json=maxDailyLoss,proto3" json:"max_daily_loss,omitempty"`
	// Maximum total loss
	MaxTotalLoss float64 `protobuf:"fixed64,5,opt,name=max_total_loss,json=maxTotalLoss,proto3" json:"max_total_loss,omitempty"`
	// Minimum margin level
	MinMarginLevel float64 `protobuf:"fixed64,6,opt,name=min_margin_level,json=minMarginLevel,proto3" json:"min_margin_level,omitempty"`
	// Margin call level
	MarginCallLevel float64 `protobuf:"fixed64,7,opt,name=margin_call_level,json=marginCallLevel,proto3" json:"margin_call_level,omitempty"`
	// Liquidation level
	LiquidationLevel float64 `protobuf:"fixed64,8,opt,name=liquidation_level,json=liquidationLevel,proto3" json:"liquidation_level,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RiskLimits) Reset() {
	*x = RiskLimits{}
	mi := &file_proto_risk_risk_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskLimits) ProtoMessage() {}

func (x *RiskLimits) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskLimits.ProtoReflect.Descriptor instead.
func (*RiskLimits) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{10}
}

func (x *RiskLimits) GetMaxPositionSize() float64 {
	if x != nil {
		return x.MaxPositionSize
	}
	return 0
}

func (x *RiskLimits) GetMaxOrderSize() float64 {
	if x != nil {
		return x.MaxOrderSize
	}
	return 0
}

func (x *RiskLimits) GetMaxLeverage() float64 {
	if x != nil {
		return x.MaxLeverage
	}
	return 0
}

func (x *RiskLimits) GetMaxDailyLoss() float64 {
	if x != nil {
		return x.MaxDailyLoss
	}
	return 0
}

func (x *RiskLimits) GetMaxTotalLoss() float64 {
	if x != nil {
		return x.MaxTotalLoss
	}
	return 0
}

func (x *RiskLimits) GetMinMarginLevel() float64 {
	if x != nil {
		return x.MinMarginLevel
	}
	return 0
}

func (x *RiskLimits) GetMarginCallLevel() float64 {
	if x != nil {
		return x.MarginCallLevel
	}
	return 0
}

func (x *RiskLimits) GetLiquidationLevel() float64 {
	if x != nil {
		return x.LiquidationLevel
	}
	return 0
}

// Position represents a trading position
type Position struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Symbol of the position
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Size of the position
	Size float64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	// Entry price of the position
	EntryPrice float64 `protobuf:"fixed64,3,opt,name=entry_price,json=entryPrice,proto3" json:"entry_price,omitempty"`
	// Current price of the position
	CurrentPrice float64 `protobuf:"fixed64,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	// Liquidation price of the position
	LiquidationPrice float64 `protobuf:"fixed64,5,opt,name=liquidation_price,json=liquidationPrice,proto3" json:"liquidation_price,omitempty"`
	// Unrealized profit and loss of the position
	UnrealizedPnl float64 `protobuf:"fixed64,6,opt,name=unrealized_pnl,json=unrealizedPnl,proto3" json:"unrealized_pnl,omitempty"`
	// Realized profit and loss of the position
	RealizedPnl   float64 `protobuf:"fixed64,7,opt,name=realized_pnl,json=realizedPnl,proto3" json:"realized_pnl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_proto_risk_risk_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{11}
}

func (x *Position) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Position) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Position) GetEntryPrice() float64 {
	if x != nil {
		return x.EntryPrice
	}
	return 0
}

func (x *Position) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *Position) GetLiquidationPrice() float64 {
	if x != nil {
		return x.LiquidationPrice
	}
	return 0
}

func (x *Position) GetUnrealizedPnl() float64 {
	if x != nil {
		return x.UnrealizedPnl
	}
	return 0
}

func (x *Position) GetRealizedPnl() float64 {
	if x != nil {
		return x.RealizedPnl
	}
	return 0
}

var File_proto_risk_risk_proto protoreflect.FileDescriptor

const file_proto_risk_risk_proto_rawDesc = "" +
	"\n" +
	"\x15proto/risk/risk.proto\x12\x04risk\"3\n" +
	"\x12AccountRiskRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\"\xe8\x03\n" +
	"\x13AccountRiskResponse\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x1f\n" +
	"\vtotal_value\x18\x02 \x01(\x01R\n" +
	"totalValue\x12)\n" +
	"\x10available_margin\x18\x03 \x01(\x01R\x0favailableMargin\x12\x1f\n" +
	"\vused_margin\x18\x04 \x01(\x01R\n" +
	"usedMargin\x12!\n" +
	"\fmargin_level\x18\x05 \x01(\x01R\vmarginLevel\x12*\n" +
	"\x11margin_call_level\x18\x06 \x01(\x01R\x0fmarginCallLevel\x12+\n" +
	"\x11liquidation_level\x18\a \x01(\x01R\x10liquidationLevel\x12\x1b\n" +
	"\tdaily_pnl\x18\b \x01(\x01R\bdailyPnl\x12\x1b\n" +
	"\ttotal_pnl\x18\t \x01(\x01R\btotalPnl\x12.\n" +
	"\n" +
	"risk_level\x18\n" +
	" \x01(\x0e2\x0f.risk.RiskLevelR\triskLevel\x121\n" +
	"\vrisk_limits\x18\v \x01(\v2\x10.risk.RiskLimitsR\n" +
	"riskLimits\x12,\n" +
	"\tpositions\x18\f \x03(\v2\x0e.risk.PositionR\tpositions\"L\n" +
	"\x13PositionRiskRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\"\xa4\x03\n" +
	"\x14PositionRiskResponse\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x01R\x04size\x12\x1f\n" +
	"\ventry_price\x18\x04 \x01(\x01R\n" +
	"entryPrice\x12#\n" +
	"\rcurrent_price\x18\x05 \x01(\x01R\fcurrentPrice\x12+\n" +
	"\x11liquidation_price\x18\x06 \x01(\x01R\x10liquidationPrice\x12%\n" +
	"\x0eunrealized_pnl\x18\a \x01(\x01R\runrealizedPnl\x12!\n" +
	"\frealized_pnl\x18\b \x01(\x01R\vrealizedPnl\x12%\n" +
	"\x0einitial_margin\x18\t \x01(\x01R\rinitialMargin\x12-\n" +
	"\x12maintenance_margin\x18\n" +
	" \x01(\x01R\x11maintenanceMargin\x12.\n" +
	"\n" +
	"risk_level\x18\v \x01(\x0e2\x0f.risk.RiskLevelR\triskLevel\"\xc5\x01\n" +
	"\x10OrderRiskRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12#\n" +
	"\x04side\x18\x03 \x01(\x0e2\x0f.risk.OrderSideR\x04side\x12#\n" +
	"\x04type\x18\x04 \x01(\x0e2\x0f.risk.OrderTypeR\x04type\x12\x1a\n" +
	"\bquantity\x18\x05 \x01(\x01R\bquantity\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x01R\x05price\"\xcd\x03\n" +
	"\x11OrderRiskResponse\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12#\n" +
	"\x04side\x18\x03 \x01(\x0e2\x0f.risk.OrderSideR\x04side\x12#\n" +
	"\x04type\x18\x04 \x01(\x0e2\x0f.risk.OrderTypeR\x04type\x12\x1a\n" +
	"\bquantity\x18\x05 \x01(\x01R\bquantity\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x01R\x05price\x12'\n" +
	"\x0frequired_margin\x18\a \x01(\x01R\x0erequiredMargin\x124\n" +
	"\x16available_margin_after\x18\b \x01(\x01R\x14availableMarginAfter\x12,\n" +
	"\x12margin_level_after\x18\t \x01(\x01R\x10marginLevelAfter\x12.\n" +
	"\n" +
	"risk_level\x18\n" +
	" \x01(\x0e2\x0f.risk.RiskLevelR\triskLevel\x12\x1d\n" +
	"\n" +
	"is_allowed\x18\v \x01(\bR\tisAllowed\x12)\n" +
	"\x10rejection_reason\x18\f \x01(\tR\x0frejectionReason\"\xc9\x01\n" +
	"\x14ValidateOrderRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12#\n" +
	"\x04side\x18\x03 \x01(\x0e2\x0f.risk.OrderSideR\x04side\x12#\n" +
	"\x04type\x18\x04 \x01(\x0e2\x0f.risk.OrderTypeR\x04type\x12\x1a\n" +
	"\bquantity\x18\x05 \x01(\x01R\bquantity\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x01R\x05price\"\x99\x01\n" +
	"\x15ValidateOrderResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x12)\n" +
	"\x10rejection_reason\x18\x02 \x01(\tR\x0frejectionReason\x12:\n" +
	"\frisk_metrics\x18\x03 \x01(\v2\x17.risk.OrderRiskResponseR\vriskMetrics\"k\n" +
	"\x17UpdateRiskLimitsRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x121\n" +
	"\vrisk_limits\x18\x02 \x01(\v2\x10.risk.RiskLimitsR\n" +
	"riskLimits\"l\n" +
	"\x18UpdateRiskLimitsResponse\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x121\n" +
	"\vrisk_limits\x18\x02 \x01(\v2\x10.risk.RiskLimitsR\n" +
	"riskLimits\"\xd0\x02\n" +
	"\n" +
	"RiskLimits\x12*\n" +
	"\x11max_position_size\x18\x01 \x01(\x01R\x0fmaxPositionSize\x12$\n" +
	"\x0emax_order_size\x18\x02 \x01(\x01R\fmaxOrderSize\x12!\n" +
	"\fmax_leverage\x18\x03 \x01(\x01R\vmaxLeverage\x12$\n" +
	"\x0emax_daily_loss\x18\x04 \x01(\x01R\fmaxDailyLoss\x12$\n" +
	"\x0emax_total_loss\x18\x05 \x01(\x01R\fmaxTotalLoss\x12(\n" +
	"\x10min_margin_level\x18\x06 \x01(\x01R\x0eminMarginLevel\x12*\n" +
	"\x11margin_call_level\x18\a \x01(\x01R\x0fmarginCallLevel\x12+\n" +
	"\x11liquidation_level\x18\b \x01(\x01R\x10liquidationLevel\"\xf3\x01\n" +
	"\bPosition\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x01R\x04size\x12\x1f\n" +
	"\ventry_price\x18\x03 \x01(\x01R\n" +
	"entryPrice\x12#\n" +
	"\rcurrent_price\x18\x04 \x01(\x01R\fcurrentPrice\x12+\n" +
	"\x11liquidation_price\x18\x05 \x01(\x01R\x10liquidationPrice\x12%\n" +
	"\x0eunrealized_pnl\x18\x06 \x01(\x01R\runrealizedPnl\x12!\n" +
	"\frealized_pnl\x18\a \x01(\x01R\vrealizedPnl*8\n" +
	"\tRiskLevel\x12\a\n" +
	"\x03LOW\x10\x00\x12\n" +
	"\n" +
	"\x06MEDIUM\x10\x01\x12\b\n" +
	"\x04HIGH\x10\x02\x12\f\n" +
	"\bCRITICAL\x10\x03*\x1e\n" +
	"\tOrderSide\x12\a\n" +
	"\x03BUY\x10\x00\x12\b\n" +
	"\x04SELL\x10\x01*<\n" +
	"\tOrderType\x12\n" +
	"\n" +
	"\x06MARKET\x10\x00\x12\t\n" +
	"\x05LIMIT\x10\x01\x12\b\n" +
	"\x04STOP\x10\x02\x12\x0e\n" +
	"\n" +
	"STOP_LIMIT\x10\x032\xfc\x02\n" +
	"\vRiskService\x12E\n" +
	"\x0eGetAccountRisk\x12\x18.risk.AccountRiskRequest\x1a\x19.risk.AccountRiskResponse\x12H\n" +
	"\x0fGetPositionRisk\x12\x19.risk.PositionRiskRequest\x1a\x1a.risk.PositionRiskResponse\x12?\n" +
	"\fGetOrderRisk\x12\x16.risk.OrderRiskRequest\x1a\x17.risk.OrderRiskResponse\x12H\n" +
	"\rValidateOrder\x12\x1a.risk.ValidateOrderRequest\x1a\x1b.risk.ValidateOrderResponse\x12Q\n" +
	"\x10UpdateRiskLimits\x12\x1d.risk.UpdateRiskLimitsRequest\x1a\x1e.risk.UpdateRiskLimitsResponseB,Z*github.com/abdoElHodaky/tradSys/proto/riskb\x06proto3"

var (
	file_proto_risk_risk_proto_rawDescOnce sync.Once
	file_proto_risk_risk_proto_rawDescData []byte
)

func file_proto_risk_risk_proto_rawDescGZIP() []byte {
	file_proto_risk_risk_proto_rawDescOnce.Do(func() {
		file_proto_risk_risk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_risk_risk_proto_rawDesc), len(file_proto_risk_risk_proto_rawDesc)))
	})
	return file_proto_risk_risk_proto_rawDescData
}

var file_proto_risk_risk_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_risk_risk_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_risk_risk_proto_goTypes = []any{
	(RiskLevel)(0),                   // 0: risk.RiskLevel
	(OrderSide)(0),                   // 1: risk.OrderSide
	(OrderType)(0),                   // 2: risk.OrderType
	(*AccountRiskRequest)(nil),       // 3: risk.AccountRiskRequest
	(*AccountRiskResponse)(nil),      // 4: risk.AccountRiskResponse
	(*PositionRiskRequest)(nil),      // 5: risk.PositionRiskRequest
	(*PositionRiskResponse)(nil),     // 6: risk.PositionRiskResponse
	(*OrderRiskRequest)(nil),         // 7: risk.OrderRiskRequest
	(*OrderRiskResponse)(nil),        // 8: risk.OrderRiskResponse
	(*ValidateOrderRequest)(nil),     // 9: risk.ValidateOrderRequest
	(*ValidateOrderResponse)(nil),    // 10: risk.ValidateOrderResponse
	(*UpdateRiskLimitsRequest)(nil),  // 11: risk.UpdateRiskLimitsRequest
	(*UpdateRiskLimitsResponse)(nil), // 12: risk.UpdateRiskLimitsResponse
	(*RiskLimits)(nil),               // 13: risk.RiskLimits
	(*Position)(nil),                 // 14: risk.Position
}
var file_proto_risk_risk_proto_depIdxs = []int32{
	0,  // 0: risk.AccountRiskResponse.risk_level:type_name -> risk.RiskLevel
	13, // 1: risk.AccountRiskResponse.risk_limits:type_name -> risk.RiskLimits
	14, // 2: risk.AccountRiskResponse.positions:type_name -> risk.Position
	0,  // 3: risk.PositionRiskResponse.risk_level:type_name -> risk.RiskLevel
	1,  // 4: risk.OrderRiskRequest.side:type_name -> risk.OrderSide
	2,  // 5: risk.OrderRiskRequest.type:type_name -> risk.OrderType
	1,  // 6: risk.OrderRiskResponse.side:type_name -> risk.OrderSide
	2,  // 7: risk.OrderRiskResponse.type:type_name -> risk.OrderType
	0,  // 8: risk.OrderRiskResponse.risk_level:type_name -> risk.RiskLevel
	1,  // 9: risk.ValidateOrderRequest.side:type_name -> risk.OrderSide
	2,  // 10: risk.ValidateOrderRequest.type:type_name -> risk.OrderType
	8,  // 11: risk.ValidateOrderResponse.risk_metrics:type_name -> risk.OrderRiskResponse
	13, // 12: risk.UpdateRiskLimitsRequest.risk_limits:type_name -> risk.RiskLimits
	13, // 13: risk.UpdateRiskLimitsResponse.risk_limits:type_name -> risk.RiskLimits
	3,  // 14: risk.RiskService.GetAccountRisk:input_type -> risk.AccountRiskRequest
	5,  // 15: risk.RiskService.GetPositionRisk:input_type -> risk.PositionRiskRequest
	7,  // 16: risk.RiskService.GetOrderRisk:input_type -> risk.OrderRiskRequest
	9,  // 17: risk.RiskService.ValidateOrder:input_type -> risk.ValidateOrderRequest
	11, // 18: risk.RiskService.UpdateRiskLimits:input_type -> risk.UpdateRiskLimitsRequest
	4,  // 19: risk.RiskService.GetAccountRisk:output_type -> risk.AccountRiskResponse
	6,  // 20: risk.RiskService.GetPositionRisk:output_type -> risk.PositionRiskResponse
	8,  // 21: risk.RiskService.GetOrderRisk:output_type -> risk.OrderRiskResponse
	10, // 22: risk.RiskService.ValidateOrder:output_type -> risk.ValidateOrderResponse
	12, // 23: risk.RiskService.UpdateRiskLimits:output_type -> risk.UpdateRiskLimitsResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_risk_risk_proto_init() }
func file_proto_risk_risk_proto_init() {
	if File_proto_risk_risk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_risk_risk_proto_rawDesc), len(file_proto_risk_risk_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_risk_risk_proto_goTypes,
		DependencyIndexes: file_proto_risk_risk_proto_depIdxs,
		EnumInfos:         file_proto_risk_risk_proto_enumTypes,
		MessageInfos:      file_proto_risk_risk_proto_msgTypes,
	}.Build()
	File_proto_risk_risk_proto = out.File
	file_proto_risk_risk_proto_goTypes = nil
	file_proto_risk_risk_proto_depIdxs = nil
}
