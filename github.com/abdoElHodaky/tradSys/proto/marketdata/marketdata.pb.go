// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/marketdata/marketdata.proto

package marketdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MarketDataRequest represents a request for market data
type MarketDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Symbol to get market data for
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Interval for the market data
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *MarketDataRequest) Reset() {
	*x = MarketDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataRequest) ProtoMessage() {}

func (x *MarketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataRequest.ProtoReflect.Descriptor instead.
func (*MarketDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{0}
}

func (x *MarketDataRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketDataRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

// MarketDataResponse represents a response with market data
type MarketDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Symbol of the market data
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Price of the symbol
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// Volume of the symbol
	Volume float64 `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
	// Bid price of the symbol
	Bid float64 `protobuf:"fixed64,4,opt,name=bid,proto3" json:"bid,omitempty"`
	// Ask price of the symbol
	Ask float64 `protobuf:"fixed64,5,opt,name=ask,proto3" json:"ask,omitempty"`
	// High price of the symbol
	High float64 `protobuf:"fixed64,6,opt,name=high,proto3" json:"high,omitempty"`
	// Low price of the symbol
	Low float64 `protobuf:"fixed64,7,opt,name=low,proto3" json:"low,omitempty"`
	// Open price of the symbol
	Open float64 `protobuf:"fixed64,8,opt,name=open,proto3" json:"open,omitempty"`
	// Close price of the symbol
	Close float64 `protobuf:"fixed64,9,opt,name=close,proto3" json:"close,omitempty"`
	// Timestamp of the market data
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Interval of the market data
	Interval string `protobuf:"bytes,11,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *MarketDataResponse) Reset() {
	*x = MarketDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataResponse) ProtoMessage() {}

func (x *MarketDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataResponse.ProtoReflect.Descriptor instead.
func (*MarketDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{1}
}

func (x *MarketDataResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketDataResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MarketDataResponse) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *MarketDataResponse) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *MarketDataResponse) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *MarketDataResponse) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MarketDataResponse) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *MarketDataResponse) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *MarketDataResponse) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *MarketDataResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MarketDataResponse) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

// HistoricalDataRequest represents a request for historical market data
type HistoricalDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Symbol to get historical data for
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Interval for the historical data
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Start time for the historical data
	StartTime int64 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// End time for the historical data
	EndTime int64 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Limit for the number of data points
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *HistoricalDataRequest) Reset() {
	*x = HistoricalDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoricalDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalDataRequest) ProtoMessage() {}

func (x *HistoricalDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalDataRequest.ProtoReflect.Descriptor instead.
func (*HistoricalDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{2}
}

func (x *HistoricalDataRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *HistoricalDataRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *HistoricalDataRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HistoricalDataRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *HistoricalDataRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// HistoricalDataResponse represents a response with historical market data
type HistoricalDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Symbol of the historical data
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Interval of the historical data
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Data points of the historical data
	Data []*MarketDataResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HistoricalDataResponse) Reset() {
	*x = HistoricalDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoricalDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalDataResponse) ProtoMessage() {}

func (x *HistoricalDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalDataResponse.ProtoReflect.Descriptor instead.
func (*HistoricalDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{3}
}

func (x *HistoricalDataResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *HistoricalDataResponse) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *HistoricalDataResponse) GetData() []*MarketDataResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// SymbolsRequest represents a request for available symbols
type SymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter for the symbols
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SymbolsRequest) Reset() {
	*x = SymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsRequest) ProtoMessage() {}

func (x *SymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsRequest.ProtoReflect.Descriptor instead.
func (*SymbolsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{4}
}

func (x *SymbolsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// SymbolsResponse represents a response with available symbols
type SymbolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Symbols available
	Symbols []*Symbol `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *SymbolsResponse) Reset() {
	*x = SymbolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsResponse) ProtoMessage() {}

func (x *SymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsResponse.ProtoReflect.Descriptor instead.
func (*SymbolsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{5}
}

func (x *SymbolsResponse) GetSymbols() []*Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// Symbol represents a trading symbol
type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the symbol
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Base currency of the symbol
	BaseCurrency string `protobuf:"bytes,2,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	// Quote currency of the symbol
	QuoteCurrency string `protobuf:"bytes,3,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency,omitempty"`
	// Minimum price increment of the symbol
	PriceIncrement float64 `protobuf:"fixed64,4,opt,name=price_increment,json=priceIncrement,proto3" json:"price_increment,omitempty"`
	// Minimum quantity increment of the symbol
	QuantityIncrement float64 `protobuf:"fixed64,5,opt,name=quantity_increment,json=quantityIncrement,proto3" json:"quantity_increment,omitempty"`
	// Minimum order size of the symbol
	MinOrderSize float64 `protobuf:"fixed64,6,opt,name=min_order_size,json=minOrderSize,proto3" json:"min_order_size,omitempty"`
	// Maximum order size of the symbol
	MaxOrderSize float64 `protobuf:"fixed64,7,opt,name=max_order_size,json=maxOrderSize,proto3" json:"max_order_size,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketdata_marketdata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{6}
}

func (x *Symbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Symbol) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *Symbol) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *Symbol) GetPriceIncrement() float64 {
	if x != nil {
		return x.PriceIncrement
	}
	return 0
}

func (x *Symbol) GetQuantityIncrement() float64 {
	if x != nil {
		return x.QuantityIncrement
	}
	return 0
}

func (x *Symbol) GetMinOrderSize() float64 {
	if x != nil {
		return x.MinOrderSize
	}
	return 0
}

func (x *Symbol) GetMaxOrderSize() float64 {
	if x != nil {
		return x.MaxOrderSize
	}
	return 0
}

var File_proto_marketdata_marketdata_proto protoreflect.FileDescriptor

var file_proto_marketdata_marketdata_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x47, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x88, 0x02, 0x0a, 0x12, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3f,
	0x0a, 0x0f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22,
	0x8c, 0x02, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x11, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x32, 0xdb,
	0x02, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x62, 0x64, 0x6f, 0x45,
	0x6c, 0x48, 0x6f, 0x64, 0x61, 0x6b, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x53, 0x79, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_marketdata_marketdata_proto_rawDescOnce sync.Once
	file_proto_marketdata_marketdata_proto_rawDescData = file_proto_marketdata_marketdata_proto_rawDesc
)

func file_proto_marketdata_marketdata_proto_rawDescGZIP() []byte {
	file_proto_marketdata_marketdata_proto_rawDescOnce.Do(func() {
		file_proto_marketdata_marketdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_marketdata_marketdata_proto_rawDescData)
	})
	return file_proto_marketdata_marketdata_proto_rawDescData
}

var file_proto_marketdata_marketdata_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_marketdata_marketdata_proto_goTypes = []interface{}{
	(*MarketDataRequest)(nil),      // 0: marketdata.MarketDataRequest
	(*MarketDataResponse)(nil),     // 1: marketdata.MarketDataResponse
	(*HistoricalDataRequest)(nil),  // 2: marketdata.HistoricalDataRequest
	(*HistoricalDataResponse)(nil), // 3: marketdata.HistoricalDataResponse
	(*SymbolsRequest)(nil),         // 4: marketdata.SymbolsRequest
	(*SymbolsResponse)(nil),        // 5: marketdata.SymbolsResponse
	(*Symbol)(nil),                 // 6: marketdata.Symbol
}
var file_proto_marketdata_marketdata_proto_depIdxs = []int32{
	1, // 0: marketdata.HistoricalDataResponse.data:type_name -> marketdata.MarketDataResponse
	6, // 1: marketdata.SymbolsResponse.symbols:type_name -> marketdata.Symbol
	0, // 2: marketdata.MarketDataService.GetMarketData:input_type -> marketdata.MarketDataRequest
	0, // 3: marketdata.MarketDataService.StreamMarketData:input_type -> marketdata.MarketDataRequest
	2, // 4: marketdata.MarketDataService.GetHistoricalData:input_type -> marketdata.HistoricalDataRequest
	4, // 5: marketdata.MarketDataService.GetSymbols:input_type -> marketdata.SymbolsRequest
	1, // 6: marketdata.MarketDataService.GetMarketData:output_type -> marketdata.MarketDataResponse
	1, // 7: marketdata.MarketDataService.StreamMarketData:output_type -> marketdata.MarketDataResponse
	3, // 8: marketdata.MarketDataService.GetHistoricalData:output_type -> marketdata.HistoricalDataResponse
	5, // 9: marketdata.MarketDataService.GetSymbols:output_type -> marketdata.SymbolsResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_marketdata_marketdata_proto_init() }
func file_proto_marketdata_marketdata_proto_init() {
	if File_proto_marketdata_marketdata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_marketdata_marketdata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketdata_marketdata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketdata_marketdata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoricalDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketdata_marketdata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoricalDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketdata_marketdata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketdata_marketdata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketdata_marketdata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_marketdata_marketdata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_marketdata_marketdata_proto_goTypes,
		DependencyIndexes: file_proto_marketdata_marketdata_proto_depIdxs,
		MessageInfos:      file_proto_marketdata_marketdata_proto_msgTypes,
	}.Build()
	File_proto_marketdata_marketdata_proto = out.File
	file_proto_marketdata_marketdata_proto_rawDesc = nil
	file_proto_marketdata_marketdata_proto_goTypes = nil
	file_proto_marketdata_marketdata_proto_depIdxs = nil
}
