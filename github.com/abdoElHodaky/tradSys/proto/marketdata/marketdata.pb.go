// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/marketdata/marketdata.proto

package marketdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MarketDataRequest represents a request for market data
type MarketDataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Symbol to get market data for
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Interval for the market data
	Interval      string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketDataRequest) Reset() {
	*x = MarketDataRequest{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataRequest) ProtoMessage() {}

func (x *MarketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataRequest.ProtoReflect.Descriptor instead.
func (*MarketDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{0}
}

func (x *MarketDataRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketDataRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

// MarketDataResponse represents a response with market data
type MarketDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Symbol of the market data
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Price of the symbol
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// Volume of the symbol
	Volume float64 `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
	// Bid price of the symbol
	Bid float64 `protobuf:"fixed64,4,opt,name=bid,proto3" json:"bid,omitempty"`
	// Ask price of the symbol
	Ask float64 `protobuf:"fixed64,5,opt,name=ask,proto3" json:"ask,omitempty"`
	// High price of the symbol
	High float64 `protobuf:"fixed64,6,opt,name=high,proto3" json:"high,omitempty"`
	// Low price of the symbol
	Low float64 `protobuf:"fixed64,7,opt,name=low,proto3" json:"low,omitempty"`
	// Open price of the symbol
	Open float64 `protobuf:"fixed64,8,opt,name=open,proto3" json:"open,omitempty"`
	// Close price of the symbol
	Close float64 `protobuf:"fixed64,9,opt,name=close,proto3" json:"close,omitempty"`
	// Timestamp of the market data
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Interval of the market data
	Interval      string `protobuf:"bytes,11,opt,name=interval,proto3" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketDataResponse) Reset() {
	*x = MarketDataResponse{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataResponse) ProtoMessage() {}

func (x *MarketDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataResponse.ProtoReflect.Descriptor instead.
func (*MarketDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{1}
}

func (x *MarketDataResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketDataResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MarketDataResponse) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *MarketDataResponse) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *MarketDataResponse) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *MarketDataResponse) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MarketDataResponse) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *MarketDataResponse) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *MarketDataResponse) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *MarketDataResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MarketDataResponse) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

// HistoricalDataRequest represents a request for historical market data
type HistoricalDataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Symbol to get historical data for
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Interval for the historical data
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Start time for the historical data
	StartTime int64 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// End time for the historical data
	EndTime int64 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Limit for the number of data points
	Limit         int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricalDataRequest) Reset() {
	*x = HistoricalDataRequest{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalDataRequest) ProtoMessage() {}

func (x *HistoricalDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalDataRequest.ProtoReflect.Descriptor instead.
func (*HistoricalDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{2}
}

func (x *HistoricalDataRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *HistoricalDataRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *HistoricalDataRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HistoricalDataRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *HistoricalDataRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// HistoricalDataResponse represents a response with historical market data
type HistoricalDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Symbol of the historical data
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Interval of the historical data
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Data points of the historical data
	Data          []*MarketDataResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricalDataResponse) Reset() {
	*x = HistoricalDataResponse{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalDataResponse) ProtoMessage() {}

func (x *HistoricalDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalDataResponse.ProtoReflect.Descriptor instead.
func (*HistoricalDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{3}
}

func (x *HistoricalDataResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *HistoricalDataResponse) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *HistoricalDataResponse) GetData() []*MarketDataResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// SymbolsRequest represents a request for available symbols
type SymbolsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter for the symbols
	Filter        string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolsRequest) Reset() {
	*x = SymbolsRequest{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsRequest) ProtoMessage() {}

func (x *SymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsRequest.ProtoReflect.Descriptor instead.
func (*SymbolsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{4}
}

func (x *SymbolsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// SymbolsResponse represents a response with available symbols
type SymbolsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Symbols available
	Symbols       []*Symbol `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolsResponse) Reset() {
	*x = SymbolsResponse{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsResponse) ProtoMessage() {}

func (x *SymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsResponse.ProtoReflect.Descriptor instead.
func (*SymbolsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{5}
}

func (x *SymbolsResponse) GetSymbols() []*Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// Symbol represents a trading symbol
type Symbol struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the symbol
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Base currency of the symbol
	BaseCurrency string `protobuf:"bytes,2,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	// Quote currency of the symbol
	QuoteCurrency string `protobuf:"bytes,3,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency,omitempty"`
	// Minimum price increment of the symbol
	PriceIncrement float64 `protobuf:"fixed64,4,opt,name=price_increment,json=priceIncrement,proto3" json:"price_increment,omitempty"`
	// Minimum quantity increment of the symbol
	QuantityIncrement float64 `protobuf:"fixed64,5,opt,name=quantity_increment,json=quantityIncrement,proto3" json:"quantity_increment,omitempty"`
	// Minimum order size of the symbol
	MinOrderSize float64 `protobuf:"fixed64,6,opt,name=min_order_size,json=minOrderSize,proto3" json:"min_order_size,omitempty"`
	// Maximum order size of the symbol
	MaxOrderSize  float64 `protobuf:"fixed64,7,opt,name=max_order_size,json=maxOrderSize,proto3" json:"max_order_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketdata_marketdata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_proto_marketdata_marketdata_proto_rawDescGZIP(), []int{6}
}

func (x *Symbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Symbol) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *Symbol) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *Symbol) GetPriceIncrement() float64 {
	if x != nil {
		return x.PriceIncrement
	}
	return 0
}

func (x *Symbol) GetQuantityIncrement() float64 {
	if x != nil {
		return x.QuantityIncrement
	}
	return 0
}

func (x *Symbol) GetMinOrderSize() float64 {
	if x != nil {
		return x.MinOrderSize
	}
	return 0
}

func (x *Symbol) GetMaxOrderSize() float64 {
	if x != nil {
		return x.MaxOrderSize
	}
	return 0
}

var File_proto_marketdata_marketdata_proto protoreflect.FileDescriptor

const file_proto_marketdata_marketdata_proto_rawDesc = "" +
	"\n" +
	"!proto/marketdata/marketdata.proto\x12\n" +
	"marketdata\"G\n" +
	"\x11MarketDataRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\"\x88\x02\n" +
	"\x12MarketDataResponse\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x01R\x05price\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x01R\x06volume\x12\x10\n" +
	"\x03bid\x18\x04 \x01(\x01R\x03bid\x12\x10\n" +
	"\x03ask\x18\x05 \x01(\x01R\x03ask\x12\x12\n" +
	"\x04high\x18\x06 \x01(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\a \x01(\x01R\x03low\x12\x12\n" +
	"\x04open\x18\b \x01(\x01R\x04open\x12\x14\n" +
	"\x05close\x18\t \x01(\x01R\x05close\x12\x1c\n" +
	"\ttimestamp\x18\n" +
	" \x01(\x03R\ttimestamp\x12\x1a\n" +
	"\binterval\x18\v \x01(\tR\binterval\"\x9b\x01\n" +
	"\x15HistoricalDataRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\x03R\aendTime\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"\x80\x01\n" +
	"\x16HistoricalDataResponse\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x122\n" +
	"\x04data\x18\x03 \x03(\v2\x1e.marketdata.MarketDataResponseR\x04data\"(\n" +
	"\x0eSymbolsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\"?\n" +
	"\x0fSymbolsResponse\x12,\n" +
	"\asymbols\x18\x01 \x03(\v2\x12.marketdata.SymbolR\asymbols\"\x8c\x02\n" +
	"\x06Symbol\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rbase_currency\x18\x02 \x01(\tR\fbaseCurrency\x12%\n" +
	"\x0equote_currency\x18\x03 \x01(\tR\rquoteCurrency\x12'\n" +
	"\x0fprice_increment\x18\x04 \x01(\x01R\x0epriceIncrement\x12-\n" +
	"\x12quantity_increment\x18\x05 \x01(\x01R\x11quantityIncrement\x12$\n" +
	"\x0emin_order_size\x18\x06 \x01(\x01R\fminOrderSize\x12$\n" +
	"\x0emax_order_size\x18\a \x01(\x01R\fmaxOrderSize2\xdb\x02\n" +
	"\x11MarketDataService\x12N\n" +
	"\rGetMarketData\x12\x1d.marketdata.MarketDataRequest\x1a\x1e.marketdata.MarketDataResponse\x12S\n" +
	"\x10StreamMarketData\x12\x1d.marketdata.MarketDataRequest\x1a\x1e.marketdata.MarketDataResponse0\x01\x12Z\n" +
	"\x11GetHistoricalData\x12!.marketdata.HistoricalDataRequest\x1a\".marketdata.HistoricalDataResponse\x12E\n" +
	"\n" +
	"GetSymbols\x12\x1a.marketdata.SymbolsRequest\x1a\x1b.marketdata.SymbolsResponseB2Z0github.com/abdoElHodaky/tradSys/proto/marketdatab\x06proto3"

var (
	file_proto_marketdata_marketdata_proto_rawDescOnce sync.Once
	file_proto_marketdata_marketdata_proto_rawDescData []byte
)

func file_proto_marketdata_marketdata_proto_rawDescGZIP() []byte {
	file_proto_marketdata_marketdata_proto_rawDescOnce.Do(func() {
		file_proto_marketdata_marketdata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_marketdata_marketdata_proto_rawDesc), len(file_proto_marketdata_marketdata_proto_rawDesc)))
	})
	return file_proto_marketdata_marketdata_proto_rawDescData
}

var file_proto_marketdata_marketdata_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_marketdata_marketdata_proto_goTypes = []any{
	(*MarketDataRequest)(nil),      // 0: marketdata.MarketDataRequest
	(*MarketDataResponse)(nil),     // 1: marketdata.MarketDataResponse
	(*HistoricalDataRequest)(nil),  // 2: marketdata.HistoricalDataRequest
	(*HistoricalDataResponse)(nil), // 3: marketdata.HistoricalDataResponse
	(*SymbolsRequest)(nil),         // 4: marketdata.SymbolsRequest
	(*SymbolsResponse)(nil),        // 5: marketdata.SymbolsResponse
	(*Symbol)(nil),                 // 6: marketdata.Symbol
}
var file_proto_marketdata_marketdata_proto_depIdxs = []int32{
	1, // 0: marketdata.HistoricalDataResponse.data:type_name -> marketdata.MarketDataResponse
	6, // 1: marketdata.SymbolsResponse.symbols:type_name -> marketdata.Symbol
	0, // 2: marketdata.MarketDataService.GetMarketData:input_type -> marketdata.MarketDataRequest
	0, // 3: marketdata.MarketDataService.StreamMarketData:input_type -> marketdata.MarketDataRequest
	2, // 4: marketdata.MarketDataService.GetHistoricalData:input_type -> marketdata.HistoricalDataRequest
	4, // 5: marketdata.MarketDataService.GetSymbols:input_type -> marketdata.SymbolsRequest
	1, // 6: marketdata.MarketDataService.GetMarketData:output_type -> marketdata.MarketDataResponse
	1, // 7: marketdata.MarketDataService.StreamMarketData:output_type -> marketdata.MarketDataResponse
	3, // 8: marketdata.MarketDataService.GetHistoricalData:output_type -> marketdata.HistoricalDataResponse
	5, // 9: marketdata.MarketDataService.GetSymbols:output_type -> marketdata.SymbolsResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_marketdata_marketdata_proto_init() }
func file_proto_marketdata_marketdata_proto_init() {
	if File_proto_marketdata_marketdata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_marketdata_marketdata_proto_rawDesc), len(file_proto_marketdata_marketdata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_marketdata_marketdata_proto_goTypes,
		DependencyIndexes: file_proto_marketdata_marketdata_proto_depIdxs,
		MessageInfos:      file_proto_marketdata_marketdata_proto_msgTypes,
	}.Build()
	File_proto_marketdata_marketdata_proto = out.File
	file_proto_marketdata_marketdata_proto_goTypes = nil
	file_proto_marketdata_marketdata_proto_depIdxs = nil
}
