// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/ws/message.proto

package ws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WebSocketMessage represents a message sent over WebSocket
type WebSocketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of message
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Channel the message belongs to
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	// Symbol the message is related to (optional)
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Timestamp of the message in milliseconds since epoch
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Message payload
	//
	// Types that are assignable to Payload:
	//
	//	*WebSocketMessage_MarketData
	//	*WebSocketMessage_Order
	//	*WebSocketMessage_Trade
	//	*WebSocketMessage_Heartbeat
	//	*WebSocketMessage_Subscription
	//	*WebSocketMessage_Error
	//	*WebSocketMessage_Text
	Payload isWebSocketMessage_Payload `protobuf_oneof:"payload"`
}

func (x *WebSocketMessage) Reset() {
	*x = WebSocketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMessage) ProtoMessage() {}

func (x *WebSocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMessage.ProtoReflect.Descriptor instead.
func (*WebSocketMessage) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{0}
}

func (x *WebSocketMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WebSocketMessage) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *WebSocketMessage) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *WebSocketMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (m *WebSocketMessage) GetPayload() isWebSocketMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *WebSocketMessage) GetMarketData() *MarketDataPayload {
	if x, ok := x.GetPayload().(*WebSocketMessage_MarketData); ok {
		return x.MarketData
	}
	return nil
}

func (x *WebSocketMessage) GetOrder() *OrderPayload {
	if x, ok := x.GetPayload().(*WebSocketMessage_Order); ok {
		return x.Order
	}
	return nil
}

func (x *WebSocketMessage) GetTrade() *TradePayload {
	if x, ok := x.GetPayload().(*WebSocketMessage_Trade); ok {
		return x.Trade
	}
	return nil
}

func (x *WebSocketMessage) GetHeartbeat() *HeartbeatPayload {
	if x, ok := x.GetPayload().(*WebSocketMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *WebSocketMessage) GetSubscription() *SubscriptionPayload {
	if x, ok := x.GetPayload().(*WebSocketMessage_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (x *WebSocketMessage) GetError() *ErrorPayload {
	if x, ok := x.GetPayload().(*WebSocketMessage_Error); ok {
		return x.Error
	}
	return nil
}

func (x *WebSocketMessage) GetText() string {
	if x, ok := x.GetPayload().(*WebSocketMessage_Text); ok {
		return x.Text
	}
	return ""
}

type isWebSocketMessage_Payload interface {
	isWebSocketMessage_Payload()
}

type WebSocketMessage_MarketData struct {
	// Market data message
	MarketData *MarketDataPayload `protobuf:"bytes,5,opt,name=market_data,json=marketData,proto3,oneof"`
}

type WebSocketMessage_Order struct {
	// Order message
	Order *OrderPayload `protobuf:"bytes,6,opt,name=order,proto3,oneof"`
}

type WebSocketMessage_Trade struct {
	// Trade message
	Trade *TradePayload `protobuf:"bytes,7,opt,name=trade,proto3,oneof"`
}

type WebSocketMessage_Heartbeat struct {
	// Heartbeat message
	Heartbeat *HeartbeatPayload `protobuf:"bytes,8,opt,name=heartbeat,proto3,oneof"`
}

type WebSocketMessage_Subscription struct {
	// Subscription message
	Subscription *SubscriptionPayload `protobuf:"bytes,9,opt,name=subscription,proto3,oneof"`
}

type WebSocketMessage_Error struct {
	// Error message
	Error *ErrorPayload `protobuf:"bytes,10,opt,name=error,proto3,oneof"`
}

type WebSocketMessage_Text struct {
	// Generic message with string data
	Text string `protobuf:"bytes,11,opt,name=text,proto3,oneof"`
}

func (*WebSocketMessage_MarketData) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Order) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Trade) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Heartbeat) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Subscription) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Error) isWebSocketMessage_Payload() {}

func (*WebSocketMessage_Text) isWebSocketMessage_Payload() {}

// MarketDataPayload contains market data information
type MarketDataPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Symbol
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Last price
	LastPrice float64 `protobuf:"fixed64,2,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	// Bid price
	BidPrice float64 `protobuf:"fixed64,3,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`
	// Ask price
	AskPrice float64 `protobuf:"fixed64,4,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`
	// Bid size
	BidSize float64 `protobuf:"fixed64,5,opt,name=bid_size,json=bidSize,proto3" json:"bid_size,omitempty"`
	// Ask size
	AskSize float64 `protobuf:"fixed64,6,opt,name=ask_size,json=askSize,proto3" json:"ask_size,omitempty"`
	// Volume
	Volume float64 `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	// Open price
	Open float64 `protobuf:"fixed64,8,opt,name=open,proto3" json:"open,omitempty"`
	// High price
	High float64 `protobuf:"fixed64,9,opt,name=high,proto3" json:"high,omitempty"`
	// Low price
	Low float64 `protobuf:"fixed64,10,opt,name=low,proto3" json:"low,omitempty"`
	// Close price
	Close float64 `protobuf:"fixed64,11,opt,name=close,proto3" json:"close,omitempty"`
	// Timestamp of the market data in milliseconds since epoch
	Timestamp int64 `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Exchange the data came from
	Exchange string `protobuf:"bytes,13,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// Order book snapshot (optional)
	OrderBook *OrderBookSnapshot `protobuf:"bytes,14,opt,name=order_book,json=orderBook,proto3" json:"order_book,omitempty"`
}

func (x *MarketDataPayload) Reset() {
	*x = MarketDataPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketDataPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataPayload) ProtoMessage() {}

func (x *MarketDataPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataPayload.ProtoReflect.Descriptor instead.
func (*MarketDataPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{1}
}

func (x *MarketDataPayload) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketDataPayload) GetLastPrice() float64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *MarketDataPayload) GetBidPrice() float64 {
	if x != nil {
		return x.BidPrice
	}
	return 0
}

func (x *MarketDataPayload) GetAskPrice() float64 {
	if x != nil {
		return x.AskPrice
	}
	return 0
}

func (x *MarketDataPayload) GetBidSize() float64 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *MarketDataPayload) GetAskSize() float64 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

func (x *MarketDataPayload) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *MarketDataPayload) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *MarketDataPayload) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MarketDataPayload) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *MarketDataPayload) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *MarketDataPayload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MarketDataPayload) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *MarketDataPayload) GetOrderBook() *OrderBookSnapshot {
	if x != nil {
		return x.OrderBook
	}
	return nil
}

// OrderBookSnapshot contains a snapshot of the order book
type OrderBookSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bids in the order book
	Bids []*OrderBookLevel `protobuf:"bytes,1,rep,name=bids,proto3" json:"bids,omitempty"`
	// Asks in the order book
	Asks []*OrderBookLevel `protobuf:"bytes,2,rep,name=asks,proto3" json:"asks,omitempty"`
	// Timestamp of the snapshot in milliseconds since epoch
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderBookSnapshot) Reset() {
	*x = OrderBookSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBookSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookSnapshot) ProtoMessage() {}

func (x *OrderBookSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookSnapshot.ProtoReflect.Descriptor instead.
func (*OrderBookSnapshot) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{2}
}

func (x *OrderBookSnapshot) GetBids() []*OrderBookLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBookSnapshot) GetAsks() []*OrderBookLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBookSnapshot) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// OrderBookLevel represents a level in the order book
type OrderBookLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Price
	Price float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	// Size
	Size float64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	// Number of orders at this level
	Count int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *OrderBookLevel) Reset() {
	*x = OrderBookLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBookLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookLevel) ProtoMessage() {}

func (x *OrderBookLevel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookLevel.ProtoReflect.Descriptor instead.
func (*OrderBookLevel) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{3}
}

func (x *OrderBookLevel) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderBookLevel) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OrderBookLevel) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// OrderPayload contains order information
type OrderPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Order ID
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Client order ID
	ClientOrderId string `protobuf:"bytes,2,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	// Symbol
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Side (BUY or SELL)
	Side string `protobuf:"bytes,4,opt,name=side,proto3" json:"side,omitempty"`
	// Type (MARKET, LIMIT, etc.)
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Status (NEW, FILLED, CANCELLED, etc.)
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	// Price
	Price float64 `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	// Quantity
	Quantity float64 `protobuf:"fixed64,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Filled quantity
	FilledQuantity float64 `protobuf:"fixed64,9,opt,name=filled_quantity,json=filledQuantity,proto3" json:"filled_quantity,omitempty"`
	// Average fill price
	AvgFillPrice float64 `protobuf:"fixed64,10,opt,name=avg_fill_price,json=avgFillPrice,proto3" json:"avg_fill_price,omitempty"`
	// Timestamp of the order in milliseconds since epoch
	Timestamp int64 `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderPayload) Reset() {
	*x = OrderPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPayload) ProtoMessage() {}

func (x *OrderPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPayload.ProtoReflect.Descriptor instead.
func (*OrderPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{4}
}

func (x *OrderPayload) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderPayload) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *OrderPayload) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderPayload) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderPayload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderPayload) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderPayload) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderPayload) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderPayload) GetFilledQuantity() float64 {
	if x != nil {
		return x.FilledQuantity
	}
	return 0
}

func (x *OrderPayload) GetAvgFillPrice() float64 {
	if x != nil {
		return x.AvgFillPrice
	}
	return 0
}

func (x *OrderPayload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// TradePayload contains trade information
type TradePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Trade ID
	TradeId string `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	// Order ID
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Symbol
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Side (BUY or SELL)
	Side string `protobuf:"bytes,4,opt,name=side,proto3" json:"side,omitempty"`
	// Price
	Price float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	// Quantity
	Quantity float64 `protobuf:"fixed64,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Timestamp of the trade in milliseconds since epoch
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Exchange the trade occurred on
	Exchange string `protobuf:"bytes,8,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// Fee
	Fee float64 `protobuf:"fixed64,9,opt,name=fee,proto3" json:"fee,omitempty"`
	// Fee currency
	FeeCurrency string `protobuf:"bytes,10,opt,name=fee_currency,json=feeCurrency,proto3" json:"fee_currency,omitempty"`
}

func (x *TradePayload) Reset() {
	*x = TradePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradePayload) ProtoMessage() {}

func (x *TradePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradePayload.ProtoReflect.Descriptor instead.
func (*TradePayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{5}
}

func (x *TradePayload) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *TradePayload) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TradePayload) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradePayload) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *TradePayload) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TradePayload) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TradePayload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TradePayload) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *TradePayload) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TradePayload) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

// HeartbeatPayload contains heartbeat information
type HeartbeatPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp of the heartbeat in milliseconds since epoch
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HeartbeatPayload) Reset() {
	*x = HeartbeatPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatPayload) ProtoMessage() {}

func (x *HeartbeatPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatPayload.ProtoReflect.Descriptor instead.
func (*HeartbeatPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatPayload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// SubscriptionPayload contains subscription information
type SubscriptionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Action (subscribe or unsubscribe)
	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	// Channel to subscribe to
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	// Symbol to subscribe to (optional)
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Success status
	Success bool `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SubscriptionPayload) Reset() {
	*x = SubscriptionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPayload) ProtoMessage() {}

func (x *SubscriptionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPayload.ProtoReflect.Descriptor instead.
func (*SubscriptionPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{7}
}

func (x *SubscriptionPayload) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SubscriptionPayload) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SubscriptionPayload) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SubscriptionPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubscriptionPayload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ErrorPayload contains error information
type ErrorPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional data
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ErrorPayload) Reset() {
	*x = ErrorPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorPayload) ProtoMessage() {}

func (x *ErrorPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorPayload.ProtoReflect.Descriptor instead.
func (*ErrorPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_message_proto_rawDescGZIP(), []int{8}
}

func (x *ErrorPayload) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorPayload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorPayload) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_proto_ws_message_proto protoreflect.FileDescriptor

var file_proto_ws_message_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x77, 0x73, 0x22, 0xc4, 0x03, 0x0a,
	0x10, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x73, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x77, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x73, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x77, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69,
	0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x69,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x6b,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x50, 0x0a, 0x0e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8,
	0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61,
	0x76, 0x67, 0x46, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x91, 0x02, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65,
	0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x30, 0x0a,
	0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x93, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x62, 0x64, 0x6f, 0x45, 0x6c, 0x48, 0x6f, 0x64, 0x61,
	0x6b, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x53, 0x79, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ws_message_proto_rawDescOnce sync.Once
	file_proto_ws_message_proto_rawDescData = file_proto_ws_message_proto_rawDesc
)

func file_proto_ws_message_proto_rawDescGZIP() []byte {
	file_proto_ws_message_proto_rawDescOnce.Do(func() {
		file_proto_ws_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ws_message_proto_rawDescData)
	})
	return file_proto_ws_message_proto_rawDescData
}

var file_proto_ws_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_ws_message_proto_goTypes = []interface{}{
	(*WebSocketMessage)(nil),    // 0: ws.WebSocketMessage
	(*MarketDataPayload)(nil),   // 1: ws.MarketDataPayload
	(*OrderBookSnapshot)(nil),   // 2: ws.OrderBookSnapshot
	(*OrderBookLevel)(nil),      // 3: ws.OrderBookLevel
	(*OrderPayload)(nil),        // 4: ws.OrderPayload
	(*TradePayload)(nil),        // 5: ws.TradePayload
	(*HeartbeatPayload)(nil),    // 6: ws.HeartbeatPayload
	(*SubscriptionPayload)(nil), // 7: ws.SubscriptionPayload
	(*ErrorPayload)(nil),        // 8: ws.ErrorPayload
}
var file_proto_ws_message_proto_depIdxs = []int32{
	1, // 0: ws.WebSocketMessage.market_data:type_name -> ws.MarketDataPayload
	4, // 1: ws.WebSocketMessage.order:type_name -> ws.OrderPayload
	5, // 2: ws.WebSocketMessage.trade:type_name -> ws.TradePayload
	6, // 3: ws.WebSocketMessage.heartbeat:type_name -> ws.HeartbeatPayload
	7, // 4: ws.WebSocketMessage.subscription:type_name -> ws.SubscriptionPayload
	8, // 5: ws.WebSocketMessage.error:type_name -> ws.ErrorPayload
	2, // 6: ws.MarketDataPayload.order_book:type_name -> ws.OrderBookSnapshot
	3, // 7: ws.OrderBookSnapshot.bids:type_name -> ws.OrderBookLevel
	3, // 8: ws.OrderBookSnapshot.asks:type_name -> ws.OrderBookLevel
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_proto_ws_message_proto_init() }
func file_proto_ws_message_proto_init() {
	if File_proto_ws_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ws_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebSocketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketDataPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBookSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBookLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_ws_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WebSocketMessage_MarketData)(nil),
		(*WebSocketMessage_Order)(nil),
		(*WebSocketMessage_Trade)(nil),
		(*WebSocketMessage_Heartbeat)(nil),
		(*WebSocketMessage_Subscription)(nil),
		(*WebSocketMessage_Error)(nil),
		(*WebSocketMessage_Text)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ws_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ws_message_proto_goTypes,
		DependencyIndexes: file_proto_ws_message_proto_depIdxs,
		MessageInfos:      file_proto_ws_message_proto_msgTypes,
	}.Build()
	File_proto_ws_message_proto = out.File
	file_proto_ws_message_proto_rawDesc = nil
	file_proto_ws_message_proto_goTypes = nil
	file_proto_ws_message_proto_depIdxs = nil
}
