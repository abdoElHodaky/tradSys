// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/orders/orders.proto

package orders

import (
	"context"
	"time"
)

// OrderType represents the type of order
type OrderType int32

// OrderSide represents the side of an order (buy/sell)
type OrderSide int32

// OrderStatus represents the status of an order
type OrderStatus int32

// TimeInForce represents the time in force for an order
type TimeInForce int32

// OrderType enum values
const (
	OrderType_MARKET     OrderType = 0
	OrderType_LIMIT      OrderType = 1
	OrderType_STOP       OrderType = 2
	OrderType_STOP_LIMIT OrderType = 3
	OrderType_TRAILING   OrderType = 4
	OrderType_IOC_ORDER  OrderType = 5
	OrderType_FOK_ORDER  OrderType = 6
	OrderType_CONDITIONAL OrderType = 7
)

// OrderSide enum values
const (
	OrderSide_BUY  OrderSide = 0
	OrderSide_SELL OrderSide = 1
)

// OrderStatus enum values
const (
	OrderStatus_NEW        OrderStatus = 0
	OrderStatus_PARTIAL    OrderStatus = 1
	OrderStatus_FILLED     OrderStatus = 2
	OrderStatus_CANCELLED  OrderStatus = 3
	OrderStatus_REJECTED   OrderStatus = 4
	OrderStatus_EXPIRED    OrderStatus = 5
	OrderStatus_PENDING    OrderStatus = 6
	OrderStatus_PROCESSING OrderStatus = 7
)

// TimeInForce enum values
const (
	TimeInForce_GTC TimeInForce = 0
	TimeInForce_IOC TimeInForce = 1
	TimeInForce_FOK TimeInForce = 2
	TimeInForce_DAY TimeInForce = 3
	TimeInForce_GTD TimeInForce = 4
)

// CreateOrderRequest represents a request to create an order
type CreateOrderRequest struct {
	ClientOrderID string
	Symbol        string
	Type          OrderType
	Side          OrderSide
	Price         float64
	StopPrice     float64
	Amount        float64
	TimeInForce   TimeInForce
	Leverage      float64
	ReduceOnly    bool
	PostOnly      bool
	Hidden        bool
	IcebergQty    float64
	UserID        string
}

// CancelOrderRequest represents a request to cancel an order
type CancelOrderRequest struct {
	OrderID       string
	ClientOrderID string
	Symbol        string
	UserID        string
}

// OrderResponse represents an order response
type OrderResponse struct {
	OrderID       string
	ClientOrderID string
	Symbol        string
	Type          OrderType
	Side          OrderSide
	Price         float64
	StopPrice     float64
	Amount        float64
	FilledAmount  float64
	RemainingAmount float64
	Status        OrderStatus
	TimeInForce   TimeInForce
	CreatedAt     time.Time
	UpdatedAt     time.Time
	UserID        string
	Leverage      float64
	ReduceOnly    bool
	PostOnly      bool
	Hidden        bool
	IcebergQty    float64
	Fee           float64
	FeeCurrency   string
}

// OrderServiceClient represents a client for the order service
type OrderServiceClient interface {
	CreateOrder(ctx context.Context, req *CreateOrderRequest) (*OrderResponse, error)
	CancelOrder(ctx context.Context, req *CancelOrderRequest) (*OrderResponse, error)
	GetOrder(ctx context.Context, orderID string) (*OrderResponse, error)
	GetOpenOrders(ctx context.Context, symbol string, userID string) ([]*OrderResponse, error)
}
