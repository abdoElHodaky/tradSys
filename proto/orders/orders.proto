syntax = "proto3";

package orders;

option go_package = "github.com/abdoElHodaky/tradSys/proto/orders";

// OrderService provides order management operations
service OrderService {
  // CreateOrder creates a new order
  rpc CreateOrder(CreateOrderRequest) returns (OrderResponse) {}
  
  // GetOrder returns an order by ID
  rpc GetOrder(GetOrderRequest) returns (OrderResponse) {}
  
  // CancelOrder cancels an existing order
  rpc CancelOrder(CancelOrderRequest) returns (OrderResponse) {}
  
  // GetOrders returns a list of orders
  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse) {}
}

// OrderType represents the type of order
enum OrderType {
  MARKET = 0;
  LIMIT = 1;
  STOP = 2;
  STOP_LIMIT = 3;
}

// OrderSide represents the side of an order
enum OrderSide {
  BUY = 0;
  SELL = 1;
}

// OrderStatus represents the status of an order
enum OrderStatus {
  PENDING = 0;
  OPEN = 1;
  FILLED = 2;
  PARTIALLY_FILLED = 3;
  CANCELED = 4;
  REJECTED = 5;
}

// CreateOrderRequest is a request to create a new order
message CreateOrderRequest {
  string symbol = 1;
  OrderType type = 2;
  OrderSide side = 3;
  double quantity = 4;
  double price = 5;
  double stop_price = 6;
  string client_order_id = 7;
}

// GetOrderRequest is a request to get an order by ID
message GetOrderRequest {
  string order_id = 1;
}

// CancelOrderRequest is a request to cancel an order
message CancelOrderRequest {
  string order_id = 1;
}

// GetOrdersRequest is a request to get a list of orders
message GetOrdersRequest {
  string symbol = 1;
  OrderStatus status = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  int32 limit = 5;
}

// OrderResponse contains information about an order
message OrderResponse {
  string order_id = 1;
  string symbol = 2;
  OrderType type = 3;
  OrderSide side = 4;
  OrderStatus status = 5;
  double quantity = 6;
  double filled_quantity = 7;
  double price = 8;
  double stop_price = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
  string client_order_id = 12;
}

// GetOrdersResponse contains a list of orders
message GetOrdersResponse {
  repeated OrderResponse orders = 1;
}

