apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: tradsys/api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: SERVICE_NAME
          value: "api-gateway"
        - name: SERVICE_VERSION
          value: "1.0.0"
        - name: SERVICE_ADDRESS
          value: ":8000"
        - name: SERVICE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: tradsys-config
              key: environment
        - name: REGISTRY_TYPE
          value: "kubernetes"
        - name: REGISTRY_ADDRESSES
          value: ""
        - name: BROKER_TYPE
          value: "nats"
        - name: BROKER_ADDRESSES
          value: "nats:4222"
        - name: TRACING_ENABLED
          value: "true"
        - name: TRACING_TYPE
          value: "jaeger"
        - name: TRACING_ADDRESS
          value: "jaeger-agent:6831"
        - name: METRICS_ENABLED
          value: "true"
        - name: METRICS_ADDRESS
          value: ":8000"
        - name: RESILIENCE_CIRCUIT_BREAKER_ENABLED
          value: "true"
        - name: RESILIENCE_RATE_LIMITING_ENABLED
          value: "true"
        - name: AUTH_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: tradsys-secrets
              key: jwt-secret
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  rules:
  - host: api.tradsys.example.com
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
  tls:
  - hosts:
    - api.tradsys.example.com
    secretName: tradsys-tls-secret

