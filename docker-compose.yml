version: '3.8'

services:
  tradesys:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tradesys
    ports:
      - "8080:8080"  # REST API and WebSocket
      - "50051:50051"  # gRPC
    volumes:
      - ./data:/app/data
    environment:
      - GIN_MODE=release
      - DB_PATH=/app/data/tradesys.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - tradsys-network

  api-gateway:
    build:
      context: .
      dockerfile: build/gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8000:8000"  # API Gateway
    volumes:
      - ./config:/app/config
    environment:
      - GIN_MODE=release
      - SERVICE_NAME=api-gateway
      - SERVICE_VERSION=1.0.0
      - SERVICE_ADDRESS=:8000
      - SERVICE_ENVIRONMENT=development
      - REGISTRY_TYPE=mdns
      - BROKER_TYPE=nats
      - BROKER_ADDRESSES=nats:4222
      - TRACING_ENABLED=true
      - TRACING_TYPE=jaeger
      - TRACING_ADDRESS=jaeger:6831
      - METRICS_ENABLED=true
      - METRICS_ADDRESS=:8000
      - RESILIENCE_CIRCUIT_BREAKER_ENABLED=true
      - RESILIENCE_RATE_LIMITING_ENABLED=true
      - AUTH_JWT_SECRET=development-jwt-secret-change-in-production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - tradesys
      - nats
      - jaeger
    networks:
      - tradsys-network

  nats:
    image: nats:latest
    container_name: nats
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    restart: unless-stopped
    networks:
      - tradsys-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"  # Agent - accept zipkin.thrift over compact thrift protocol
      - "6831:6831/udp"  # Agent - accept jaeger.thrift over compact thrift protocol
      - "6832:6832/udp"  # Agent - accept jaeger.thrift over binary thrift protocol
      - "5778:5778"      # Agent - serve configs
      - "16686:16686"    # Query - serve frontend
      - "14268:14268"    # Collector - accept jaeger.thrift directly from clients
      - "14250:14250"    # Collector - accept model.proto
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    restart: unless-stopped
    networks:
      - tradsys-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    depends_on:
      - tradesys
      - api-gateway
    networks:
      - tradsys-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - tradsys-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  tradsys-network:
    driver: bridge

