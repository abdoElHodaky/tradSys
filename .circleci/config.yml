version: 2.1

executors:
  large-linux-machine:
    machine:
      image: ubuntu-2204:2024.11.1
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/project

commands:
  setup_go:
    steps:
      - run:
          name: Install Go 1.23
          command: |
            curl -LO https://go.dev/dl/go1.23.11.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.23.11.linux-amd64.tar.gz
            echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
            source $BASH_ENV
            go version
  setup_protobuf:
    steps:
      - run:
          name: Install Protobuf
          command: |
            sudo apt-get update
            sudo apt-get install -y protobuf-compiler
            protoc --version

jobs:
  lint:
    executor: large-linux-machine
    steps:
      - checkout
      - setup_go
      - setup_protobuf
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: 
          command: |
            
            go mod tidy
            go mod download
      - run:
          name: Install golangci-lint
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ~/bin v1.54.2
            echo 'export PATH=$PATH:~/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Run golangci-lint
          command: golangci-lint run --timeout 5m

  test:
    executor: large-linux-machine
    steps:
      - checkout
      - setup_go
      - setup_protobuf
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: 
          command: |
            
            go mod tidy
            go mod download
      - run:
          name: Generate protobuf files (if needed)
          command: |
            if [ -f proto/gen.sh ]; then bash proto/gen.sh; fi
      - run:
          name: Run tests
          command: |
            mkdir -p test-results
            go test -v ./... | tee test-results/test-output.txt
      - store_test_results:
          path: test-results

  build:
    executor: large-linux-machine
    steps:
      - checkout
      - setup_go
      - setup_protobuf
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: 
          command: |
            
            go mod tidy
            go mod download
      - run:
          name: Generate protobuf files (if needed)
          command: |
            if [ -f proto/gen.sh ]; then bash proto/gen.sh; fi
      - run:
          name: Build
          command: go build -v ./...

workflows:
  version: 2
  ci_pipeline:
    jobs:
      - lint
      - test
      - build:
          requires:
            - lint
            - test
